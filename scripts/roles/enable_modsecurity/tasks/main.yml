---
- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true

- name: Install basic packages
  ansible.builtin.apt:
    name:
      - build-essential
      - apt-utils
      - autoconf
      - automake
      - git
      - libcurl4-openssl-dev
      - libgeoip-dev
      - liblmdb-dev
      - libtool
      - libxml2-dev
      - libyajl-dev
      - pkgconf
      - zlib1g-dev
    state: present

- name: Download libpcre++
  ansible.builtin.get_url:
    url: http://deb.debian.org/debian/pool/main/libp/libpcre++/libpcre++_0.9.5.orig.tar.gz
    dest: /tmp/libpcre++_0.9.5.orig.tar.gz
    mode: "0755"

- name: Extract libpcre++
  ansible.builtin.unarchive:
    src: /tmp/libpcre++_0.9.5.orig.tar.gz
    dest: /tmp
    creates: /tmp/libpcre++-0.9.5.orig
    remote_src: true

- name: Configure and install libpcre++
  ansible.builtin.shell: |
    cd /tmp/libpcre++-0.9.5.orig
    ./configure && make && make install
  args:
    creates: /usr/local/bin/pcre-config

- name: Clone and install ModSecurity
  block:
    - name: Clone git repo
      ansible.builtin.git:
        repo: https://github.com/SpiderLabs/ModSecurity
        dest: /usr/local/src/ModSecurity
        version: v3/master
        depth: 1

    - name: Install modsecurity
      ansible.builtin.shell: |
        cd /usr/local/src/ModSecurity
        git submodule init
        git submodule update
        ./build.sh && ./configure && make && make install
      args:
        creates: /usr/local/modsecurity

    - name: Clone ModSecurity-nginx
      ansible.builtin.git:
        repo: https://github.com/SpiderLabs/ModSecurity-nginx
        dest: /usr/local/src/ModSecurity-nginx
        depth: 1

- name: Configure, build and install nginx with ModSecurity module
  block:
    - name: Configure modsecurity
      ansible.builtin.shell: |
        cd /etc/nginx/nginx-1.26.0
        ./configure --add-dynamic-module=/usr/local/src/ModSecurity-nginx --prefix=/etc/nginx
        make modules
      args:
        creates: /etc/nginx/modules/ngx_http_modsecurity_module.so

    - name: Change permissions
      ansible.builtin.file:
        path: /etc/nginx/modules/
        state: directory
        mode: '0755'

    - name: Copy modsecurity module
      ansible.builtin.copy:
        src: /etc/nginx/nginx-1.26.0/objs/ngx_http_modsecurity_module.so
        dest: /etc/nginx/modules/
        remote_src: true

- name: Configure ModSecurity in nginx
  block:
    - name: Configure nginx to load the ModSecurity module
      ansible.builtin.lineinfile:
        path: /etc/nginx/conf/nginx.conf
        insertafter: 'worker_processes  1;'
        line: 'load_module modules/ngx_http_modsecurity_module.so;'

    - name: Ensure destination directory exists
      ansible.builtin.file:
        path: /etc/nginx/modsec
        state: directory
        mode: '0755'

    - name: Download modsecurity.conf
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/SpiderLabs/ModSecurity/v3/master/modsecurity.conf-recommended
        dest: /etc/nginx/modsec/modsecurity.conf

    - name: Copy unicode.mapping to modsec directory
      ansible.builtin.copy:
        src: /usr/local/src/ModSecurity/unicode.mapping
        dest: /etc/nginx/modsec/
        remote_src: true

    - name: Enable ModSecurity
      ansible.builtin.lineinfile:
        path: /etc/nginx/modsec/modsecurity.conf
        regexp: '^SecRuleEngine DetectionOnly'
        line: 'SecRuleEngine On'

- name: Setup ModSecurity CRS
  block:
    - name: Clone core rule set repository
      ansible.builtin.git:
        repo: https://github.com/coreruleset/coreruleset
        dest: /usr/local/modsecurity-crs

    - name: Move CRS setup file to active configuration
      ansible.builtin.copy:
        src: /usr/local/modsecurity-crs/crs-setup.conf.example
        dest: /usr/local/modsecurity-crs/crs-setup.conf
        remote_src: true

    - name: Move exclusion rules before CRS
      ansible.builtin.copy:
        src: /usr/local/modsecurity-crs/rules/REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf.example
        dest: /usr/local/modsecurity-crs/rules/REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf
        remote_src: true

    - name: Setup main ModSecurity configuration
      ansible.builtin.copy:
        content: |
          Include /etc/nginx/modsec/modsecurity.conf
          Include /usr/local/modsecurity-crs/crs-setup.conf
          Include /usr/local/modsecurity-crs/rules/*.conf
        dest: /etc/nginx/modsec/main.conf
        remote_src: true

- name: Update nginx configuration for ModSecurity
  ansible.builtin.lineinfile:
    path: /etc/nginx/sites-available/main.conf
    insertafter: 'index index.php;'
    line: |
      modsecurity on;
      modsecurity_rules_file /etc/nginx/modsec/main.conf;

- name: Change crs-setup.conf
  ansible.builtin.lineinfile:
    path: /usr/local/modsecurity-crs/crs-setup.conf
    insertafter: "# -- [[ Paranoia Level Initialization ]] ---------------------------------------"
    line: |
      SecAction \
          "id:900000,\
          phase:2,\
          pass,\
          t:none,\
          nolog,\
          tag:'OWASP_CRS',\
          ver:'OWASP_CRS/4.3.0-dev',\
          setvar:tx.blocking_paranoia_level=2"

- name: Restart nginx
  ansible.builtin.service:
    name: nginx
    state: restarted
